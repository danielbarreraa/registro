package com.gts.springboot.backend.apirest.models.services;

import java.io.IOException;
import java.net.MalformedURLException;
import java.nio.file.Path;
import java.nio.file.Paths;

import org.springframework.core.io.Resource;
import org.springframework.core.io.UrlResource;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.multipart.MultipartFile;

public class UploadFileServicelmlp implements IUploadFileService {

	@Override
	public Resource cargar(String nombreFoto) throws MalformedURLException {
		// TODO Auto-generated method stub
Path rutaArchivo = Paths.get("uploads").resolve(nombreFoto).toAbsolutePath();
		
		Resource recurso = null;
		try {
		recurso = new UrlResource(rutaArchivo.toUri());
		}catch (MalformedURLException e) {
			e.printStackTrace();
		}
		if(!recurso.exists()&& !recurso.isReadable()) {
			rutaArchivo = Paths.get("src/main/resources/static/images").resolve("no-usuario.png").toAbsolutePath();
			try {
				recurso = new UrlResource(rutaArchivo.toUri());
				}catch (MalformedURLException e) {
					e.printStackTrace();
				}
			
			throw new RuntimeException("Error no se pudo cargar la imagen: "+ nombreFoto);	
		}
		HttpHeaders cabecera = new HttpHeaders();
		cabecera.add(HttpHeaders.CONTENT_DISPOSITION,"attachment; filemane=\""+recurso.getFilename()+"\"");
		
		return new ResponseEntity<Resource>(recurso, cabecera, HttpStatus.OK);
	}

}
return null;
}

	@Override
	public String copiar(MultipartFile archivo) throws IOException {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public boolean eliminar(String nombreFoto) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public Path getPath(String nombreFoto) {
		// TODO Auto-generated method stub
		return null;
	}

}
